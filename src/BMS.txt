имя пользователя: pi
пароль: raspberrymj (либо raspberry)
установленные по умолчанию при установке rasbian
------------------------------------------------------------------------------


обновление rasbian:
	sudo apt-get update 
	sudo apt-get upgrade
	



текущая версия rasbian
	cat /etc/os-release
	cat /proc/version
	cat /etc/apt/sources.list | grep -v "#"


------------------------  mosquitto     -----------------------------------------------
обновляем репозиторий для установки mosquitto
	sudo wget http://repo.mosquitto.org/debian/mosquitto-repo.gpg.key
	sudo apt-key add mosquitto-repo.gpg.key
	cd /etc/apt/sources.list.d/
	sudo wget http://repo.mosquitto.org/debian/mosquitto-jessie.list     !!!!!!!!!! по имени версии
	sudo wget http://repo.mosquitto.org/debian/mosquitto-buster.list	
	sudo apt-get update

Устанавливаем MQTT брокер (сервер), если нужно.

	sudo apt-get install mosquitto

Устанавливаем MQTT клиент:

	sudo apt-get install mosquitto mosquitto-clients


отправка в топик
	mosquitto_pub -h 192.168.1.17 -t '/test' -m '{"relay" : 1}'
прием в топике
	mosquitto_sub -v -t /#	

------------------------------------------------------------------------------
поиск устройства в USB
 	dmesg

[ 1154.057379] usbcore: registered new interface driver pl2303
[ 1154.057458] usbserial: USB Serial support registered for pl2303
[ 1154.057559] pl2303 1-1.3:1.0: pl2303 converter detected
[ 1154.064369] usb 1-1.3: pl2303 converter now attached to ttyUSB0

добавить прав
	sudo chmod a+rw /dev/ttyUSB0

------------------------------------------------------------------------------

установка  cmake
	sudo apt-get install cmake



--------------------------  smart_bms   -----------------------------------------------
программа опроса параметров из смарт-БМС и отправки на сервер MQTT
создана по мотивам программы skymax-demo предназначенной для опроса Voltronic, Axpert и т.п.
первоисточник программы skymax-demo:
	https://github.com/manio/skymax-demo


------------------------------------------------------------------------------

в домашней дирректории, делаем новую папку scripts и переходим в нее 
	cd ~
	mkdir scripts
	cd scripts

------------------------------------------------------------------------------
создать папку для программы smart_bms, например bms
	mkdir bms
	cd bms

------------------------------------------------------------------------------
копирование исходников в созданную папку любым доступным способом.
права на файлах должны быть -rw-r--r--	

------------------------------------------------------------------------------

компиляция
	cmake . && make

------------------------------------------------------------------------------
или без компиляции (и установки  cmake) перенести файлы 
	smart_bms
	bms.conf

и дать права на запуск smart_bms
sudo chmod a+rx ./smart_bms

------------------------------------------------------------------------------

поправить bms.conf
	nano  bms.conf


device=/dev/ttyUSB0 	 //порт куда подключена БМС

MQTTserver=192.168.1.17  // ip адрес MQTT брокера

MQTTtopik=test_1	 //  имя топика

run_interval=5		 // интервал опроса БМС

# output to : mqtt or consol
out_to=consol  // вывод в консоль
#out_to=mqtt  // прямая отправка на сервер MQTT




(выход с сохранением: Ctrl+X   Y   Enter)


-------------------------------------------------------------------------------

для универсальности запуска ( не из домашней дирректории)
можно создать папку  /etc/BMS/  и пометить туда конфиг-файл bms.conf



sudo mkdir /etc/BMS
sudo chmod a+rw /etc/BMS/
sudo cp -a ~/scripts/bms/bms.conf /etc/BMS/

-------------------------------------------------------------------------------

параметры запуска полученной программы:
pi@PI4:~/scripts/bms-demo $ ./smart_bms -h

USAGE:  ./smart_bms  [-h | --help], [-1 | --once], [-d | --debug]

SUPPORTED ARGUMENTS:
          -h | --help           This Help Message
          -1 | --once           Runs one iteration on the BMS, and then exits
          -d | --debug          Additional debugging

запускаем (одноразовае выполнение)
	./smart_bms -1

получаем результат:
{"BMS_status":1,"Vbat":26.66,"Abat":0.00,"AhBat":79.1,"AhTyp":80.0,"FET_stat":3,"RSOC":99,"Vbank0":3.332,"Balans0":0,"Vbank1":3.333,"Balans1":0,"Vbank2":3.332,"Balans2":0,"Vbank3":3.332,"Balans3":0,"Vbank4":3.334,"Balans4":0,"Vbank5":3.336,"Balans5":0,"Vbank6":3.331,"Balans6":0,"Vbank7":3.334,"Balans7":0,"Temp0":22.20,"Temp1":22.40,"Protect":"-no-"}


запуск в режиме отладки: 
./smart_bms -d


Пример результата:

BMS: Debug set

device: </dev/ttyUSB0>
MQTTserver: <192.168.1.17>
MQTTtopik: <test_1>
run_interval: 5
out_to: <consol>

ZAPROS 0: DD A5 3 0 FF FD 77
  CRC OK
OTVET: DD 3 0 1B A 6A 0 0 1E E7 1F 40 0 0 27 72 0 0 0 0 0 0 15 63 3 8 2 B 89 B 8B FB C5 77 0 0
   n = 34  rashet: 3  TRUE

ZAPROS 1: DD A5 4 0 FF FC 77
  CRC OK
OTVET: DD 4 0 10 D 4 D 5 D 4 D 4 D 6 D 8 D 3 D 6 FF 60 77 0 3
   n = 23  rashet: 4  TRUE

{"BMS_status":1,"Vbat":26.66,"Abat":0.00,"AhBat":79.1,"AhTyp":80.0,"FET_stat":3,"RSOC":99,"Vbank0":3.332,"Balans0":0,"Vbank1":3.333,"Balans1":0,"Vbank2":3.332,"Balans2":0,"Vbank3":3.332,"Balans3":0,"Vbank4":3.334,"Balans4":0,"Vbank5":3.336,"Balans5":0,"Vbank6":3.331,"Balans6":0,"Vbank7":3.334,"Balans7":0,"Temp0":22.20,"Temp1":22.40,"Protect":"-no-"}

--------------------------------------------------------------------------------------



скрипт для запуска и передачи.Пример.
вывод данных в bms.conf настроен в консоль:  out_to=consol  // вывод в консоль


скрипт  test.sh. 
	nano ./test.sh


#!/bin/bash

sudo chmod a+rw /dev/ttyUSB0

#переход в папку с программой
cd /home/pi/scripts/bms/

#запуск программы. результат в переменную hash
hash=$(./smart_bms -1)

#               отправка
# на сервер MQTT
mosquitto_pub -h 192.168.1.17 -t '/test_1' -m $hash

# на сервер emonpi
#curl --data 'node=bms&data='$hash'&apikey=03dfde0bfa746194b7a79b019866' 'http://755.154.539.129/emoncms/input/post'



(выход с сохранением: Ctrl+X   Y   Enter)

Добавить права на запуск:
	sudo chmod a+rx ./test.sh

--------------------------------------------------------------

запуск по расписанию
	crontab -e
и добавить записк запуска скрипта

*/10 * * * * /home/pi/scripts/bms/test.sh > /dev/null 2>&1


--------------------------------------------------------------


Или настраиваем в bms.conf вывод непосредсвенно на сервер MQTT

out_to=mqtt  // прямая отправка на сервер MQTT

и запускаем любым известным способом в фоновом режиме
Как это сделать искать в интернете.
например:
https://1cloud.ru/help/linux/linux_zapusk_komand_fonovom_rezhime
https://blackdiver.net/it/linux/4164

